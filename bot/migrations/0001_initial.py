# Generated by Django 5.1.5 on 2025-01-23 15:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Топ Клиент',
                'verbose_name_plural': 'Топ Клиенты',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Топ Клиент',
                'verbose_name_plural': 'Топ Клиенты',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserTelegram',
            fields=[
                ('telegram_id', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='ID телеграмма')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя пользователя')),
                ('phone_from_telegram', models.CharField(blank=True, max_length=255, null=True, verbose_name='Телефон')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата Последнего посещения')),
            ],
        ),
        migrations.CreateModel(
            name='UserWhatsApp',
            fields=[
                ('phone_watsapp', models.BigIntegerField(primary_key=True, serialize=False, unique=True, verbose_name='ID WhatsApp')),
                ('username', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя пользователя')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата Последнего посещения')),
            ],
        ),
        migrations.CreateModel(
            name='ClientProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('second_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('contact_phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Контактный телефон')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Контактный email')),
                ('client', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot.client', verbose_name='Клиент')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Сообщение')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bot.client', verbose_name='Клиент')),
            ],
        ),
        migrations.CreateModel(
            name='SellerProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('second_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('contact_phone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Контактный телефон')),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Контактный email')),
                ('company_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес компании')),
                ('company_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название компании')),
                ('seller', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot.seller', verbose_name='Продавец')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='seller',
            name='user_telegram',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot.usertelegram', verbose_name='Телеграм Пользователь'),
        ),
        migrations.AddField(
            model_name='client',
            name='user_telegram',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot.usertelegram', verbose_name='Телеграм Пользователь'),
        ),
        migrations.AddField(
            model_name='seller',
            name='user_watsapp',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot.userwhatsapp', verbose_name='Вотсапп Пользователь'),
        ),
        migrations.AddField(
            model_name='client',
            name='user_watsapp',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='bot.userwhatsapp', verbose_name='Вотсапп Пользователь'),
        ),
    ]
